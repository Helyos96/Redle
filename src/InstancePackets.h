#ifndef __H_INSTANCE_PACKETS
#define __H_INSTANCE_PACKETS

#include "Packet.h"
#include "types.h"

enum OpcodesInstance : u16 {
	C2S_LOGIN = 0x03,

	S2C_UNK_0x10 = 0x10,
	S2C_UNK_0x13 = 0x13,
};

class S2C_Unk_0x10 : public Packet {
public:
	S2C_Unk_0x10() : Packet(S2C_UNK_0x10) {
		buffer << (u16)0x235C;
		buffer << "Standard";
		buffer << (u32)1;
		buffer << (u32)0x010A000A;
		buffer << (u8)0x80;
		buffer << (u16)0;
		buffer << (u16)0;
		buffer << (u8)0x2E;
		buffer << (u16)12; // count

		buffer << (u32)0x11586DBF;
		buffer << (u32)0x20E8D38A;
		buffer << (u32)0x290DB74B;
		buffer << (u32)0x2B478CD2;
		buffer << (u32)0x52249D54;
		buffer << (u32)0x63838790;
		buffer << (u32)0xA7F27712;
		buffer << (u32)0xB3C93F94;
		buffer << (u32)0xC00BF443;
		buffer << (u32)0xC54F4989;
		buffer << (u32)0xD3C61E43;
		buffer << (u32)0xFA377BDF;

		buffer << (u16)1;
		buffer << (u32)0x19023202;
		buffer << (u16)0;

		static const u8 blob[] = { 0x03, 0x96, 0xA7, 0x00, 0xC0, 0x42, 0x5F, 0x01, 0xC0, 0x45, 0x01, 0x7E, 0x01, 0xC0, 0x42, 0x5F, 0x01, 0x00 };
		buffer.append(blob, sizeof(blob));
	}
};

class S2C_Unk_0x13 : public Packet {
public:
	S2C_Unk_0x13() : Packet(S2C_UNK_0x13) {
		static const size_t len = 0x224;
		static const u8 blob1[len * 2] = { 0x30, 0x01, 0x41, 0x02, 0x16, 0x05, 0x17, 0x05, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0D, 0x08, 0x0E, 0x08, 0x10, 0x08, 0x10, 0x08, 0x10, 0x08, 0x10, 0x08, 0x10, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x12, 0x08, 0x13, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x1C, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x22, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x23, 0x08, 0x28, 0x08, 0x28, 0x08, 0x28, 0x08, 0x29, 0x08, 0x29, 0x08, 0x29, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2E, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x2F, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x31, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x33, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x40, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x41, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x42, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x08, 0x66, 0x08, 0x67, 0x08, 0x68, 0x08, 0x6C, 0x08, 0x76, 0x08, 0x80, 0x08, 0x8A, 0x08, 0xA0, 0x08, 0xA5, 0x08, 0xA8, 0x08, 0xAC, 0x08, 0xCC, 0x08, 0xD3, 0x08, 0x62, 0x0B, 0x66, 0x0B, 0xDF, 0x0B, 0xE1, 0x0B, 0xE7, 0x0B, 0x41, 0x0D, 0x42, 0x0D, 0x43, 0x0D, 0x44, 0x0D, 0x45, 0x0D, 0x46, 0x0D, 0x47, 0x0D, 0x93, 0x0E, 0x94, 0x0E, 0x95, 0x0E, 0x96, 0x0E, 0x97, 0x0E, 0x98, 0x0E, 0x99, 0x0E, 0x9A, 0x0E, 0x9B, 0x0E, 0x9C, 0x0E, 0x9D, 0x0E, 0x9E, 0x0E, 0x9F, 0x0E, 0xA0, 0x0E, 0x48, 0x10, 0x49, 0x10, 0x4A, 0x10, 0x56, 0x10, 0x57, 0x10, 0x71, 0x10, 0x75, 0x10, 0x64, 0x11, 0x65, 0x11, 0x65, 0x11, 0x65, 0x11, 0x6E, 0x11, 0x6F, 0x11, 0x16, 0x12, 0x18, 0x12, 0x19, 0x12, 0x1E, 0x12, 0x51, 0x13, 0x59, 0x13, 0x59, 0x13, 0x59, 0x13, 0x59, 0x13, 0x59, 0x13, 0x59, 0x13, 0x59, 0x13, 0x59, 0x13, 0x59, 0x13, 0x5D, 0x13, 0x6E, 0x13, 0x9C, 0x14, 0xA4, 0x14, 0x8E, 0x15, 0x94, 0x15, 0x42, 0x1A, 0x43, 0x1A, 0x44, 0x1A, 0x4B, 0x1A, 0xE7, 0x1A, 0xE8, 0x1A, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x8C, 0x1B, 0x0B, 0x1C, 0x0B, 0x1C, 0x0D, 0x1C, 0x0D, 0x1C, 0xA4, 0x1C, 0xDA, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDC, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xDD, 0x1D, 0xE2, 0x1D, 0xE3, 0x1D, 0xE3, 0x1D, 0xE3, 0x1D, 0xE3, 0x1D, 0xE3, 0x1D, 0xE4, 0x1D, 0xFB, 0x1D, 0x03, 0x1E, 0x07, 0x1E, 0x0B, 0x1E, 0x0C, 0x1E, 0x0F, 0x1E, 0x14, 0x1E, 0x15, 0x1E, 0x37, 0x1F, 0xDF, 0x1F, 0x12, 0x20, 0x19, 0x21, 0x1B, 0x21, 0xB8, 0x21, 0xB9, 0x21, 0xF4, 0x21, 0xFC, 0x21, 0xFE, 0x21, 0x1F, 0x22, 0x4E, 0x22, 0x65, 0x22, 0x67, 0x22, 0x67, 0x22, 0x0C, 0x23, 0x36, 0x23 };
		static const u8 blob2[len] = { 0x0D, 0x0D, 0x0D, 0x0D, 0x01, 0x02, 0x04, 0x07, 0x0B, 0x10, 0x14, 0x18, 0x1C, 0x20, 0x24, 0x28, 0x2C, 0x30, 0x34, 0x38, 0x3C, 0x40, 0x43, 0x46, 0x48, 0x4A, 0x4C, 0x50, 0x46, 0x01, 0x04, 0x07, 0x0B, 0x10, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x21, 0x24, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3C, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0D, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x1D, 0x0A, 0x0D, 0x1D, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0A, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x27, 0x2A, 0x2D, 0x30, 0x36, 0x39, 0x3F, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x54, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x20, 0x42, 0x4B, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0C, 0x0F, 0x13, 0x17, 0x1B, 0x1F, 0x23, 0x29, 0x38, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0C, 0x0F, 0x13, 0x17, 0x1B, 0x23, 0x29, 0x2F, 0x32, 0x3B, 0x3E, 0x40, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x52, 0x54, 0x56, 0x58, 0x5B, 0x5C, 0x5D, 0x30, 0x48, 0x30, 0x48, 0x0D, 0x0D, 0x10, 0x14, 0x18, 0x1C, 0x1F, 0x22, 0x25, 0x28, 0x2B, 0x2E, 0x31, 0x34, 0x37, 0x3A, 0x3C, 0x3E, 0x40, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x52, 0x56, 0x10, 0x14, 0x18, 0x1C, 0x1F, 0x22, 0x25, 0x28, 0x2B, 0x2E, 0x31, 0x34, 0x37, 0x3A, 0x3C, 0x3E, 0x40, 0x42, 0x44, 0x46, 0x48, 0x4A, 0x4C, 0x4E, 0x50, 0x52, 0x56, 0x0D, 0x04, 0x07, 0x0B, 0x10, 0x14, 0x11, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0B, 0x18, 0x0D, 0x0D };
		buffer << (u16)len;
		buffer << (u16)0;
		buffer.append(blob1, sizeof(blob1));
		buffer.append(blob2, sizeof(blob2));
	}
};

#endif